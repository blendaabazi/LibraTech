// <auto-generated />
using System;
using Lab1_Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(LibrariaContext))]
    [Migration("20240810225237_Libri")]
    partial class Libri
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab1_Backend.Models.Autori", b =>
                {
                    b.Property<int>("AutoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoriID"));

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutoriID");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("Lab1_Backend.Models.Gjuha", b =>
                {
                    b.Property<int>("GjuhaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GjuhaID"));

                    b.Property<string>("gjuha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GjuhaID");

                    b.ToTable("Gjuha");
                });

            modelBuilder.Entity("Lab1_Backend.Models.Kategoria", b =>
                {
                    b.Property<int>("KategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriaID"));

                    b.Property<string>("kategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriaID");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("Lab1_Backend.Models.Libri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AutoriID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Cmimi")
                        .HasColumnType("float");

                    b.Property<int?>("GjuhaID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KategoriaID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("NrFaqeve")
                        .HasColumnType("int");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.Property<int?>("ShtepiaBotueseID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Titulli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VitiPublikimit")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutoriID");

                    b.HasIndex("GjuhaID");

                    b.HasIndex("KategoriaID");

                    b.HasIndex("ShtepiaBotueseID");

                    b.ToTable("Libri");
                });

            modelBuilder.Entity("Lab1_Backend.Models.ShtepiaBotuese", b =>
                {
                    b.Property<int>("ShtepiaBotueseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShtepiaBotueseID"));

                    b.Property<string>("shtepiaBotuese")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShtepiaBotueseID");

                    b.ToTable("ShtepiaBotuese");
                });

            modelBuilder.Entity("Lab1_Backend.Models.Libri", b =>
                {
                    b.HasOne("Lab1_Backend.Models.Autori", "Autori")
                        .WithMany()
                        .HasForeignKey("AutoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_Backend.Models.Gjuha", "Gjuha")
                        .WithMany()
                        .HasForeignKey("GjuhaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_Backend.Models.Kategoria", "Kategoria")
                        .WithMany()
                        .HasForeignKey("KategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_Backend.Models.ShtepiaBotuese", "ShtepiaBotuese")
                        .WithMany()
                        .HasForeignKey("ShtepiaBotueseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autori");

                    b.Navigation("Gjuha");

                    b.Navigation("Kategoria");

                    b.Navigation("ShtepiaBotuese");
                });
#pragma warning restore 612, 618
        }
    }
}
